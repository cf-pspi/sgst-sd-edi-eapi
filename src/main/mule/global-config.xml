<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:wss="http://www.mulesoft.org/schema/mule/wss"
	xmlns:apikit-soap="http://www.mulesoft.org/schema/mule/apikit-soap"
	xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger"
	xmlns:sockets="http://www.mulesoft.org/schema/mule/sockets" xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:api-gateway="http://www.mulesoft.org/schema/mule/api-gateway" xmlns:secure-properties="http://www.mulesoft.org/schema/mule/secure-properties" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/sockets http://www.mulesoft.org/schema/mule/sockets/current/mule-sockets.xsd 
http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/secure-properties http://www.mulesoft.org/schema/mule/secure-properties/current/mule-secure-properties.xsd
http://www.mulesoft.org/schema/mule/api-gateway http://www.mulesoft.org/schema/mule/api-gateway/current/mule-api-gateway.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd
http://www.mulesoft.org/schema/mule/apikit-soap http://www.mulesoft.org/schema/mule/apikit-soap/current/mule-apikit-soap.xsd
http://www.mulesoft.org/schema/mule/wss http://www.mulesoft.org/schema/mule/wss/current/mule-wss.xsd">
	<!-- <configuration-properties doc:name="Configuration properties" doc:id="5cda403a-e192-4f4f-bf8b-351f4b21ef66" file="properties\local.yaml" /> -->
	<api-gateway:autodiscovery apiId="${api.autodiscovery.id}" ignoreBasePath="true" doc:name="API Autodiscovery" doc:id="83ded0e2-f303-492c-93d2-bc99082ace31" flowRef="sgst-sd-edi-eapi-main" />
	
	 <json-logger:config name="JSON_Logger_Config" doc:name="JSON Logger Config" doc:id="89c20580-939b-42d3-b3d6-ed6f1dcf9751" environment="${mule.env}" />
	 <http:listener-config name="sgst-sd-edi-eapi-httpListenerConfig">
        <http:listener-connection host="${https.host}" port="${https.port}" readTimeout="${https.ReadTimeout}" protocol="HTTPS">
			<tls:context >
				<tls:key-store type="jks" path="${https.keystore.path}" alias="${https.keystore.alias}" keyPassword="${https.keystore.password}" password="${https.keystore.password}" />
			</tls:context>
		</http:listener-connection>
    </http:listener-config>
    <apikit:config name="sgst-sd-edi-eapi-config" api="sgst-sd-edi-eapi.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
	 <!-- <api-gateway:autodiscovery apiId="${api.autodiscovery.id}" ignoreBasePath="true" doc:name="API Autodiscovery" doc:id="aa2fadab-bd65-4cdc-8d89-daf4bd910287" flowRef="sgst-mm-edi-eapi-main" /> --> 
	<http:request-config name="HTTP_Request_For_PAPI" doc:name="HTTP Request configuration" doc:id="fc30f76d-f9fe-42e2-b267-c9cc43627746" basePath="${https.orders.papi.basepath}">
		<http:request-connection maxConnections="${https.papi.max.connections}" connectionIdleTimeout="${https.papi.connections.idle.timeout}" responseBufferSize="${https.papi.response.buffer.size}" host="${https.orders.papi.host}" port="${https.orders.papi.port}" protocol="HTTPS">
			<reconnection >
				<reconnect frequency="${https.papi.reconnection.frequency}" count="${https.papi.reconnection.count}"/>
			</reconnection>
			<tls:context >
				<tls:trust-store insecure="true" />
			</tls:context>
			<http:client-socket-properties >
				<sockets:tcp-client-socket-properties connectionTimeout="${https.papi.connections.timeout}" />
			</http:client-socket-properties>
		</http:request-connection>
	</http:request-config>
	<http:request-config name="HTTP_Request_For_SAPI" doc:name="HTTP Request configuration" doc:id="6eda0b18-635d-4c6d-a1eb-2ed487dda1e3" basePath="#[vars.httpConfig.basepath]">
		<http:request-connection maxConnections="${https.sapi.max.connections}" connectionIdleTimeout="${https.sapi.connections.idle.timeout}" responseBufferSize="${https.sapi.response.buffer.size}" host="#[vars.httpConfig.host]" tlsContext="TLS_Context" protocol="HTTPS">
			<reconnection >
				<reconnect frequency="${https.sapi.reconnection.frequency}" count="${https.sapi.reconnection.count}"/>
			</reconnection>
			<http:client-socket-properties >
				<sockets:tcp-client-socket-properties connectionTimeout="50000" />
			</http:client-socket-properties>
		</http:request-connection>
	</http:request-config>
	<tls:context name="TLS_Context" doc:name="TLS Context" doc:id="03206e63-c7e3-4328-badc-5e0921c80440" >
		<tls:key-store type="jks" path="mykeystore.jks" alias="servercert" keyPassword="winter@123" password="winter@123" />
	</tls:context>
	<http:request-config name="HTTP_Request_For_BackUPFile" doc:name="HTTP Request configuration" doc:id="e9d0180f-fb3a-4f19-b9e6-e8a84621c416" basePath="${https.utilities.papi.basepath}">
		<http:request-connection host="${https.utilities.papi.host}" maxConnections="${https.pcs.max.connections}" connectionIdleTimeout="${https.pcs.connections.idle.timeout}" responseBufferSize="${https.pcs.response.buffer.size}" port="${https.utilities.papi.port}" protocol="HTTPS">
			<reconnection >
				<reconnect frequency="${https.pcs.reconnection.frequency}" count="${https.pcs.reconnection.count}" />
			</reconnection>
			<tls:context >
				<tls:trust-store insecure="true" />
			</tls:context>
			<http:client-socket-properties >
				<sockets:tcp-client-socket-properties connectionTimeout="${https.pcs.connections.timeout}" />
			</http:client-socket-properties>
		</http:request-connection>
	</http:request-config>
	<global-property doc:name="Global Property" doc:id="e0beee06-29ca-4f42-9f8a-e4e2be392921" name="mule.env" value="sit" />
	<configuration-properties doc:name="Configuration properties" doc:id="73958c67-2798-496d-8bfb-413cdf2ce40d" file="properties/${mule.env}.yaml" />
	<secure-properties:config name="Secure_Properties_Config" doc:name="Secure Properties Config" doc:id="656e20da-1993-42bb-83c3-ef1577efbbba" file="properties/${mule.env}.yaml" key="${secret.key}" />
<!-- 	<anypoint-mq:config name="Anypoint_MQ_Config" doc:name="Anypoint MQ Config" doc:id="ae9f8078-06a6-4f3c-94fa-053ecc371a82" > -->
<!-- 		<anypoint-mq:connection clientId="${amq.notification.email.publish.client.id}" clientSecret="${amq.notification.email.publish.client.secret}" url="${amq.notification.email.publish.url}"/> -->
<!-- 	</anypoint-mq:config> -->
	<configuration doc:name="Configuration" doc:id="9fdc6e14-eea2-44bd-ae1f-4da33e302e5d" defaultErrorHandler-ref="common-exception-handler" />
	<configuration-properties doc:name="Configuration properties" doc:id="0ae26d89-d9b8-4645-8408-df638a7a9bb9" file="properties\common.yaml" />
	<!-- <api-gateway:autodiscovery apiId="${api.autodiscovery.id}" ignoreBasePath="true" doc:name="API Autodiscovery" doc:id="e3ac257f-70b1-4136-8ece-c23090da9c1f" flowRef="sgst-mm-edi-eapi-main" /> -->
	
	
	<global-property doc:name="Global Property" doc:id="8662076a-faee-41c5-8eac-9ed093e2bb43" name="secret.key" value="PanasonicDev2022" />
	
	<api-gateway:autodiscovery apiId="${api.autodiscovery.currentStock.id}" ignoreBasePath="true" doc:name="API Autodiscovery" doc:id="12d5c9f5-a9c3-4e7a-9363-7d1d986c9570" flowRef="sgst-sd-edi-main-current-stock" />
	<api-gateway:autodiscovery apiId="${api.autodiscovery.3pl.id}" ignoreBasePath="true" doc:name="API Autodiscovery" doc:id="103bd051-7f1f-42a4-8af7-be422b866103" flowRef="sgst-sd-edi-main-3pl" />
	<error-handler name="common-soap-exception-handler" doc:id="23a76056-bf9e-4bef-8f8a-21317537ce91" >
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="aa46a0d7-c98c-4b3b-a274-27b72268e942" type="ANY" when="attributes.maskedRequestPath contains('DoOwnershipChangeResponse')">
			<json-logger:logger doc:name="Logger" doc:id="721b5347-5c42-4d5b-8e98-112672c50c69" config-ref="JSON_Logger_Config" message="API FAILURE: Error occured for thirdPartyLogistics" tracePoint="EXCEPTION" correlationId="#[vars.transactionId]">
				<json-logger:content ><![CDATA[#[%dw 2.0
output application/json
---
{
    "flowDirection": "INBOUND",
    "source": "OneRoof",
    "destination": "SAP",
    "fileName": "NA",
    "errorCode": Mule::p('errors.'++ error.errorType.identifier as String ++ '.errorCode') default 500,
    "errorMessage": error.description default "The server is unable to process the request",
    "subsidiary": "NA",
    "apiName": "sgst-sd-edi-eapi",
    "action": "PROCESS",
    "status": "Failure"
}]]]></json-logger:content>
			</json-logger:logger>
			<ee:transform doc:name="Frame error msg for 3pl" doc:id="73dd2edc-caf6-400f-b8f2-0c3141d32fb8" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns pana http://SOA/Pana_APAC_OneRoof.WebServices:DoOwnershipChangeResponse
---
soapenv#Envelope: {
  'soapenv:Header': {},
  'soapenv:Body': {
  	pana#DoOwnershipChangeResponseResponse: {
  		RespCode: Mule::p('errors.'++ error.errorType.identifier as String ++ '.errorCode') default 500,
  		RespMsg: error.description default "The server is unable to process the request"
  	}
  }
}	]]></ee:set-payload>
			</ee:message>
				<ee:variables >
					<ee:set-variable variableName="httpStatus" ><![CDATA[Mule::p('errors.'++ error.errorType.identifier as String ++ '.errorCode') default 500]]></ee:set-variable>
				</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Error notification details" doc:id="fcaa811c-4f71-4aee-a6c5-58f562d902dc" >
			<ee:message >
			</ee:message>
			<ee:variables >
					<ee:set-variable resource="dwl/errorResponse.dwl" variableName="errorNotification" />
				</ee:variables>
		</ee:transform>
			<async doc:name="Async" doc:id="53ec211e-878c-4b62-a493-43a99feae2be" >
				<flow-ref doc:name="Route - Error Notification" doc:id="6cf74112-5eb8-44f3-86bc-ce932ec7a102" name="global-config-email-notification"/>
			</async>
		</on-error-propagate>
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="b448423a-e2c0-45f8-abb9-43aa79fbac4e" type="ANY" when="attributes.maskedRequestPath contains('OneRoofRequest')">
			<json-logger:logger doc:name="Logger" doc:id="02908f97-d85f-4f57-9230-65269fb8a881" config-ref="JSON_Logger_Config" message="API FAILURE: Error occured for CurrentStock" tracePoint="EXCEPTION" correlationId="#[vars.transactionId]">
				<json-logger:content ><![CDATA[#[%dw 2.0
output application/json
---
{
    "flowDirection": "INBOUND",
    "source": "OneRoof",
    "destination": "SAP",
    "fileName": "NA",
    "errorCode": Mule::p('errors.'++ error.errorType.identifier as String ++ '.errorCode') default 500,
    "errorMessage": error.description default "The server is unable to process the request",
    "subsidiary": "NA",
    "apiName": "sgst-sd-edi-eapi",
    "action": "PROCESS",
    "status": "Failure"
}]]]></json-logger:content>
			</json-logger:logger>
			<ee:transform doc:name="Frame error msg for currentStock" doc:id="4efdf2e0-9f4a-4671-b0fd-235b70e3fee2" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns soapenv http://schemas.xmlsoap.org/soap/envelope/
ns pana http://10.81.25.59/Pana_APAC_OneRoof.WebServices:OneRoofRequest
---
soapenv#Envelope: {
  'soapenv:Header': {},
  'soapenv:Body': {
  	pana#OneRoofRequestResponse: {
  		ErrorCode: Mule::p('errors.'++ error.errorType.identifier as String ++ '.errorCode') default 500,
  		ErrorMsg: error.description default "The server is unable to process the request"
  	}
  }
}	]]></ee:set-payload>
			</ee:message>
				<ee:variables >
					<ee:set-variable variableName="httpStatus" ><![CDATA[Mule::p('errors.'++ error.errorType.identifier as String ++ '.errorCode') default 500]]></ee:set-variable>
				</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Error notification details" doc:id="cb144de0-de2a-4e21-9ada-3be59a4605a1" >
			<ee:message >
			</ee:message>
			<ee:variables >
					<ee:set-variable resource="dwl/errorResponse.dwl" variableName="errorNotification" />
				</ee:variables>
		</ee:transform>
			<async doc:name="Async" doc:id="7b76718c-d37b-42ad-8f99-bca9c7f17e7d" >
				<flow-ref doc:name="Route - Error Notification" doc:id="9a06d026-7ae6-4954-bbd8-3b7d4aa0edb3" name="global-config-email-notification"/>
			</async>
		</on-error-propagate>
	</error-handler>
	<error-handler name="common-exception-handler" doc:id="2f64f20f-4127-4c66-98a1-5c4925c66219" >
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="dcc95b7a-feca-440e-abd1-887b6ce2973f" type="COMPRESSION:COULD_NOT_DECOMPRESS, COMPRESSION:INVALID_ARCHIVE, COMPRESSION:TOO_MANY_ENTRIES" >
			<flow-ref doc:name="Flow Reference" doc:id="265d6a54-6c37-4998-9cce-1e6880719c91" name="global-config-propagate-error"/>
			<async doc:name="Async" doc:id="21e9ea96-c066-4291-b7f6-764305b966bd" >
				<flow-ref doc:name="global-config-email-notification" doc:id="f34baed0-530a-4a1f-9720-e6e8ba93ed16" name="global-config-email-notification" />
			</async>
		
</on-error-propagate>
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="19a74ed7-ecad-4310-99c3-ece8e74b78ba" type="APIKIT:BAD_REQUEST">
			<flow-ref doc:name="Flow Reference" doc:id="0d866432-6871-4806-a9fb-bbd4279dc18e" name="global-config-propagate-error"/>
		
</on-error-propagate>
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="a081cc78-d933-4258-8fbf-f39ec78b20da" type="APIKIT:NOT_FOUND" >
			<flow-ref doc:name="Flow Reference" doc:id="cc88b5c7-f936-40a6-9cca-c21825999d5c" name="global-config-propagate-error"/>
		
</on-error-propagate>
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="45daea73-4d5e-499d-bc93-527d31d00ec3" type="APIKIT:METHOD_NOT_ALLOWED" >
			<flow-ref doc:name="Flow Reference" doc:id="6f63dd9b-84f6-42b7-8d4f-92b3158eb4a8" name="global-config-propagate-error"/>
		
</on-error-propagate>
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="5e5091b9-f5a4-4424-93cb-7571ab61a3ff" type="APIKIT:NOT_ACCEPTABLE" >
			<flow-ref doc:name="Flow Reference" doc:id="1dc4ea02-9c21-4d79-a312-04fe6ae59f48" name="global-config-propagate-error"/>
		
</on-error-propagate>
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="a4c10839-ad82-4230-8a7a-0efb9ad5e4d4" type="APIKIT:UNSUPPORTED_MEDIA_TYPE" >
			<flow-ref doc:name="Flow Reference" doc:id="fab2788f-985b-44d8-be66-3297196a55e6" name="global-config-propagate-error"/>
		
</on-error-propagate>
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="b38c58ae-e093-435a-9ebb-30fe427d29c6" type="APIKIT:NOT_IMPLEMENTED" >
			<flow-ref doc:name="Flow Reference" doc:id="03e78922-f743-4940-a87d-c9f9bb10bd7e" name="global-config-propagate-error"/>
		
</on-error-propagate>
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="93e56fd3-ea33-497b-95f6-6caeede4c683" type="HTTP:BAD_REQUEST, HTTP:CLIENT_SECURITY, HTTP:CONNECTIVITY, HTTP:FORBIDDEN, HTTP:INTERNAL_SERVER_ERROR, HTTP:METHOD_NOT_ALLOWED, HTTP:NOT_ACCEPTABLE, HTTP:NOT_FOUND, HTTP:PARSING, HTTP:RETRY_EXHAUSTED, HTTP:SECURITY, HTTP:SERVICE_UNAVAILABLE, HTTP:TIMEOUT, HTTP:TOO_MANY_REQUESTS, HTTP:UNAUTHORIZED, HTTP:UNSUPPORTED_MEDIA_TYPE">
			<flow-ref doc:name="Flow Reference" doc:id="a8f4d226-8783-4386-9fb8-51007b757b28" name="global-config-propagate-error"/>
		
</on-error-propagate>
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="0dc444c1-e895-4c8f-87e7-70e9e8fe6d09" type="HTTP:BAD_GATEWAY">
			<flow-ref doc:name="Flow Reference" doc:id="f3d10f77-0ee8-49aa-aada-44d9bc10bcb5" name="global-config-propagate-error"/>
		
</on-error-propagate>
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="6a9c0982-c6d8-4078-8719-6ed63dd5905c" type="HTTP:GATEWAY_TIMEOUT">
			<flow-ref doc:name="Flow Reference" doc:id="69555d15-7ec1-4f24-a48c-f6fbfbecd36f" name="global-config-propagate-error"/>
			<async doc:name="Async" doc:id="1d4130fa-9420-494d-85b8-f0ea47b2a8c0" >
				<flow-ref doc:name="global-config-email-notification" doc:id="adc62e09-1b8b-4015-abbc-638f714a2ece" name="global-config-email-notification" />
			</async>
		
</on-error-propagate>
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="08749404-447a-4ce9-9be5-f918225d19d0" type="ANY">
			<flow-ref doc:name="Flow Reference" doc:id="81eeb1f6-8a23-4e07-a870-cf7300d8c946" name="global-config-propagate-error"/>
			<async doc:name="Async" doc:id="ea7360c9-d459-4b11-a718-4d4de71e7c16">
			<flow-ref doc:name="global-config-email-notification" doc:id="438dff58-d2d8-4b4f-99f2-1038a14479f3" name="global-config-email-notification" />
		</async>
		
</on-error-propagate>
	</error-handler>
	<sub-flow name="global-config-propagate-error" doc:id="1f65c7e9-aa43-41a4-b943-56d4af259b44" >
		<ee:transform doc:name="Frame Error Message" doc:id="1cd85a03-9f9d-4f7b-b4a1-ce9f49cae91c">
				<ee:message>
				<ee:set-payload resource="dwl/errorResponse.dwl" />

				</ee:message>
			<ee:variables >
				<ee:set-variable variableName="errorNotification" ><![CDATA[%dw 2.0
output application/json
---
{
 errorCode: Mule::p('errors.'++ error.errorType.identifier as String ++ '.errorCode') default 500,
 errorMessage: error.description default "The server is unable to process the request",
  errorType: Mule::p('errors.'++ error.errorType.identifier as String ++ '.errorType') default 'RUNTIME_ERROR',
 
correlationID :vars.transactionId,
timestamp :now()
}
]]></ee:set-variable>
			</ee:variables>
			
</ee:transform>
		<json-logger:logger doc:name="Logger" doc:id="12dc725b-80a8-42f8-8001-be80528e52e7" config-ref="JSON_Logger_Config" message='#["Exception occurred processing the transaction for correlation Id " ++ vars.transactionID]' tracePoint="EXCEPTION" priority="ERROR" correlationId="#[vars.transactionId]">
			<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(vars.errorDetails) 
}]]]></json-logger:content>
		</json-logger:logger>
	
</sub-flow>
	<sub-flow name="global-config-email-notification" doc:id="0880d099-7c81-4775-a226-e11472dad97a" >
		<ee:transform doc:name="Set Request" doc:id="cca62187-6017-4269-9b88-5f447c9e649f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var seperator = "/"
---
{
    "apiName": app.name default "",
    "correlationID": vars.transactionId default "",
    "toAddress": Mule::p('notification.email.toaddress') default [],
    "fileName": vars.fileDetails.flatFileName default "NA",
    "filePath": ("/" ++ Mule::p('api.flowDirection')  ++ "/" ++ lower(vars.fileDetails.subsidiary) ++ "/" ++ lower(vars.fileDetails.externalSystem) ++ vars.sapiHttpPath  ++ "/" ++ lower(vars.fileDetails.flatFileName) ++ "." ++ vars.fileDetails.flatFileExtension) as String default "NA",
    "errorDetails":{
        "errorCode": vars.errorNotification.errorCode default "",
        "errorDesc": vars.errorNotification.errorMessage default ""
   }}
 ]]></ee:set-payload>
			</ee:message>
			<ee:variables >
			</ee:variables>
		</ee:transform>
		<http:request method="POST" doc:name="send-email-notification" doc:id="73a83a94-6f32-40d5-a9d0-90ce2a79d4ef" config-ref="HTTP_Request_For_BackUPFile" path="${https.utilities.papi.path.notification}" outputMimeType="application/json" sendCorrelationId="ALWAYS">
			<http:headers ><![CDATA[#[output application/java
---
{

"X-Client-ID": Mule::p('https.utilities.papi.clientId'),
"X-Client-Secret": Mule::p('https.utilities.papi.clientSecret')
}]]]></http:headers>
		</http:request>
	</sub-flow>

</mule>
