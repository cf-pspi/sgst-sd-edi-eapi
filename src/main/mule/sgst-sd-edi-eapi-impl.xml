<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger" xmlns:anypoint-mq="http://www.mulesoft.org/schema/mule/anypoint-mq"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:compression="http://www.mulesoft.org/schema/mule/compression" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/compression http://www.mulesoft.org/schema/mule/compression/current/mule-compression.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/anypoint-mq http://www.mulesoft.org/schema/mule/anypoint-mq/current/mule-anypoint-mq.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd">
	<sub-flow name="sgst-sd-edi-eapi-impl-flow" doc:id="1e8db879-7c4a-4cbc-8cf4-7b59b3a5f4eb" >
		<ee:transform doc:name="initialise - Variables" doc:id="dfbb19b0-c67c-46d0-8274-e31fae46b1e1">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="sapiHttpPath" ><![CDATA[%dw 2.0
output application/java
---
attributes.maskedRequestPath]]></ee:set-variable>
				<ee:set-variable resource="dwl/ediMsgHeader.dwl" variableName="EDIMsgHeader" />
				<ee:set-variable variableName="fileDetails" ><![CDATA[%dw 2.0
output application/json
---
read(payload.parts.'EDIMsgHeader'.content,"application/json")]]></ee:set-variable>
				<ee:set-variable variableName="initialPayload" ><![CDATA[%dw 2.0
output multipart/form-data
input payload multipart/form-data
---
payload]]></ee:set-variable>
			

</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Parse EDIMsgHeader To Json" doc:id="ffc6bad1-0a55-49b3-a1bf-3b7245b0f355">
			<ee:message />
			<ee:variables>
				<ee:set-variable resource="dwl/eventAuditMessage.dwl" variableName="eventAuditMessage" />
			

</ee:variables>
		</ee:transform>
		<json-logger:logger doc:name="Log - Initial status" doc:id="a1c05f5d-f5f2-42eb-a165-d2433ab61e64" config-ref="JSON_Logger_Config" message='API START: INIT - Received API request.' correlationId="#[vars.transactionId]">
			<json-logger:content ><![CDATA[#[%dw 2.0
output application/json
---
{
   "flowDirection": Mule::p('api.flowDirection'),
   "source": Mule::p('api.source'),
   "target": vars.fileDetails.externalSystem default "",
   "fileName": if(vars.fileDetails.flatFileName != null and vars.fileDetails.flatFileExtension != null)(vars.fileDetails.flatFileName as String ++ vars.fileDetails.flatFileExtension as String) else "" ,
   "errorCode": "",
   "errorMessage": "",
   "subsidiary": vars.fileDetails.subsidiary default "",
   "apiName": Mule::p('api.name'),
   "action": Mule::p('api.action.api-start'),
   "status": Mule::p('api.status.init')
}]]]></json-logger:content>

		</json-logger:logger>
		<async doc:name="Async Call" doc:id="2dff04a0-c092-4dd7-903f-308979806df7" >
			<flow-ref doc:name="Backup file in PCS" doc:id="916db69b-a895-41ec-b6d3-8b50a910fe05" name="sgst-sd-edi-impl-api-impl-backUp-flow" />
		</async>
		<flow-ref doc:name="Post File to PAPI" doc:id="84c3c8ce-b26b-417d-a9f9-1ad2d89e4d4e" name="sgst-sd-edi-eapi-impl-sapi-flow" />
		<choice doc:name="Choice" doc:id="209d1ab5-4d2a-4bed-a3b5-889b40da5957" >
			<when expression="#[isEmpty(vars.errorMessage)]">
				<ee:transform doc:name="Frame - Response" doc:id="ddd94fd7-b0c7-4959-afe2-ccb070b0aade">
			<ee:message>
				<ee:set-payload resource="dwl/responsePayload.dwl" />
			</ee:message>
		</ee:transform>
				<json-logger:logger doc:name="Log Success Response" doc:id="51cb550d-ac2d-4f2b-b657-6f20bc876eba" config-ref="JSON_Logger_Config" message='API END: Complete - Received API request.' tracePoint="END" correlationId="#[vars.transactionId]">
			<json-logger:content><![CDATA[#[%dw 2.0
output application/json
---
{
   "flowDirection": Mule::p('api.flowDirection'),
   "source": Mule::p('api.source'),
   "target": vars.fileDetails.externalSystem default "",
   "fileName": if(vars.fileDetails.flatFileName != null and vars.fileDetails.flatFileExtension != null)(vars.fileDetails.flatFileName as String ++ vars.fileDetails.flatFileExtension as String) else "" ,
   "errorCode": "",
   "errorMessage": "",
   "subsidiary": vars.fileDetails.subsidiary default "",
   "apiName": Mule::p('api.name'),
   "action": Mule::p('api.action.api-start'),
   "status": Mule::p('api.status.init')
}]]]></json-logger:content>
		</json-logger:logger>
			</when>
		</choice>
	</sub-flow>
	<sub-flow name="sgst-sd-edi-impl-api-impl-backUp-flow" doc:id="58cb3365-7738-4aec-91e6-391c2c512f1a" >
		<ee:transform doc:name="Set Request" doc:id="c1c5e010-a941-4015-8c0c-c5777ed70843">
				<ee:message>
				<ee:set-payload ><![CDATA[%dw 2.0
output multipart/form-data
input payload multipart/form-data
---
{
  "parts": {
  	"File": vars.initialPayload.parts.'File'
  	}
}]]></ee:set-payload>
				</ee:message>
			<ee:variables >
			</ee:variables>
			</ee:transform>
		<http:request method="POST" doc:name="Call PCS Backup" doc:id="3ae19d80-071e-4755-a80c-0529366c9f06" config-ref="HTTP_Request_For_BackUPFile" path="${https.utilities.papi.path.backup}" outputMimeType="multipart/form-data">
					<http:headers><![CDATA[#[{
"direction": Mule::p('api.flowDirection'),
"correlationID" :vars.transactionID,
"externalSystem" : vars.fileDetails.externalSystem,
"fileType" : vars.sapiHttpPath replace "/" with "" ,
"fileName" :vars.fileDetails.flatFileName,
"fileExtension": if(vars.fileDetails.flatFileExtension != null ) (vars.fileDetails.flatFileExtension replace "." with "") else vars.fileDetails.flatFileExtension,
"subsidiary": vars.fileDetails.subsidiary,
"X-Client-ID": Mule::p('https.utilities.papi.clientId'),
"X-Client-Secret": Mule::p('secure::https.utilities.papi.clientSecret')
}]]]></http:headers>
		</http:request>
		<json-logger:logger doc:name="Log - Backup Status" doc:id="d4475cb8-572c-454c-8399-05262661165c" config-ref="JSON_Logger_Config" message='#["File backup to PCS Successful for correlation Id " ++ vars.transactionID]' tracePoint="AFTER_REQUEST" correlationId="#[vars.transactionID]">
			<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(vars.eventAuditMessage) 
}]]]></json-logger:content>
		</json-logger:logger>
	</sub-flow>
	<sub-flow name="sgst-sd-edi-eapi-impl-sapi-flow" doc:id="b879f7c5-f4b6-4f3e-8e8f-200456b9b8aa" >
		<ee:transform doc:name="HTTP Configurations" doc:id="50f4a0d1-9e4a-4841-b36b-594bed382d8b" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="validateExternalSystem" ><![CDATA[output application/json
---
if( Mule::p('routing.systems.sd') contains vars.fileDetails.externalSystem) "fpl"
else 
"InvalidExternalSystem"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Choice" doc:id="bb898d23-84a6-4578-bac9-bc51bbb27075" >
			<when expression='#[vars.validateExternalSystem != "InvalidExternalSystem"]'>
				<http:request method="POST" doc:name="Call PAPI - Post File" doc:id="003eac06-6662-4b19-a44c-b10362c484b9" config-ref="HTTP_Request_For_PAPI" outputMimeType="multipart/form-data" path="${https.orders.papi.fplPath}" requestStreamingMode="ALWAYS">
			<http:body><![CDATA[#[vars.initialPayload]]]></http:body>
					<http:headers><![CDATA[#[output application/java
---
{
	"correlationID" : vars.transactionID,
	"X-Client-Secret" : "${secure::https.orders.papi.clientSecret}",
    "Accept-Encoding" : "zip",
    "X-Client-ID" : "${https.orders.papi.clientId}"
}]]]></http:headers>
		</http:request>
				<json-logger:logger doc:name="Log - SAPI Call Status" doc:id="05c40f06-7fae-41e1-9d4a-e71bc988a1f5" config-ref="JSON_Logger_Config" message='#["File published successfully to SAPI for correlation ID"  ++ vars.transactionID]' tracePoint="AFTER_REQUEST" correlationId="#[vars.transactionId]">
			<json-logger:content><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(vars.eventAuditMessage) 
}]]]></json-logger:content>
		</json-logger:logger>
			</when>
			<otherwise >
				<ee:transform doc:name="Set Error Response" doc:id="aec9c869-fb85-40c0-84d1-2fd3a223d87f" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
 errorCode: 500,
 errorMessage: "The provided external system: " ++ vars.fileDetails.externalSystem ++ " is invalid for fpl",
  errorType: 'DATA ERROR',
 
correlationID :vars.transactionId,
timestamp :now()
}
]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[%dw 2.0
output application/java
---
500]]></ee:set-variable>
						<ee:set-variable variableName="errorMessage" ><![CDATA[%dw 2.0
output application/json
---
{
 errorCode: 500,
 errorMessage: "The provided external system: " ++ vars.fileDetails.externalSystem ++ " is invalid for fpl",
  errorType: 'DATA_ERROR',
 
correlationID :vars.transactionId,
timestamp :now()
}
]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<json-logger:logger doc:name="Logger" doc:id="38afe0fd-42e4-4bba-8cf5-b8a8ed7df90a" config-ref="JSON_Logger_Config" message='#["Exception occurred processing the transaction for correlation Id " ++ vars.transactionID]' correlationId="#[vars.transactionId]">
					<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(vars.errorMessage) 
}]]]></json-logger:content>
				</json-logger:logger>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="sgst-sd-edi-eapi-impl-3pl-flow" doc:id="bfbb2929-131b-4e34-b7d8-ff32ec30ef0d" >
		<json-logger:logger doc:name="log-Initial status" doc:id="72c68a27-ac53-4ddd-9726-b1ba29565168" config-ref="JSON_Logger_Config" message="API START: INIT - Received API request for third-party-logistics" correlationId="#[vars.transactionId]">
			<json-logger:content ><![CDATA[#[%dw 2.0
output application/json
---
{
   "flowDirection": Mule::p('api.oneRoof.flowDirection'),
   "source": Mule::p('api.oneRoof.source'),
   "target": vars.fileDetails.externalSystem default "",
   "fileName": if(vars.fileDetails.flatFileName != null and vars.fileDetails.flatFileExtension != null)(vars.fileDetails.flatFileName as String ++ vars.fileDetails.flatFileExtension as String) else "" ,
   "errorCode": "",
   "errorMessage": "",
   "subsidiary": vars.fileDetails.subsidiary default "",
   "apiName": Mule::p('api.name'),
   "action": Mule::p('api.action.api-start'),
   "status": Mule::p('api.status.init')
}]]]></json-logger:content>
		</json-logger:logger>
		
		<ee:transform doc:name="Set payload to send to SAPI" doc:id="a7342f97-30cc-469d-b2be-5d289193d710" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
    "CompanyCodeList": payload..DoOwnershipChangeResponse.*CompanyCodeList, 
    "DoNumberList": payload..DoOwnershipChangeResponse.*DoNumberList
}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="httpConfig" ><![CDATA[output application/json
---
{ 
	host:  Mule::p('https.oneroof.sapi.host'),
	port:  Mule::p('https.oneroof.sapi.port'),
	basepath:  Mule::p('https.oneroof.sapi.basepath'),
	path:  Mule::p('https.oneroof.sapi.3pl.path')	
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Call to SAPI" doc:id="c9cddaf0-b7c5-41c2-b6f0-6e9c6f80caa9" name="sgst-sd-edi-eapi-impl-sap-sapi-flow"/>
		<ee:transform doc:name="Frame - Response" doc:id="cc293bc7-e5c0-4936-98bf-d9e1e4a56c0a">
			<ee:message>
				<ee:set-payload resource="dwl/3plResponsePayload.dwl" />
			</ee:message>
		</ee:transform>
		<json-logger:logger doc:name="Log Success Response" doc:id="44067a63-17b7-423f-8fe8-8a3a9901b297" config-ref="JSON_Logger_Config" message="API END:COMPLETE : Received API request for third-party-logistics" tracePoint="AFTER_TRANSFORM" correlationId="#[vars.transactionId]">
			<json-logger:content ><![CDATA[#[%dw 2.0
output application/json
---
{
   "flowDirection": Mule::p('api.oneRoof.flowDirection'),
   "source": Mule::p('api.oneRoof.source'),
   "target": vars.fileDetails.externalSystem default "",
   "fileName": if(vars.fileDetails.flatFileName != null and vars.fileDetails.flatFileExtension != null)(vars.fileDetails.flatFileName as String ++ vars.fileDetails.flatFileExtension as String) else "" ,
   "errorCode": "",
   "errorMessage": "",
   "subsidiary": vars.fileDetails.subsidiary default "",
   "apiName": Mule::p('api.name'),
   "action": Mule::p('api.action.api-end'),
   "status": Mule::p('api.status.complete')
}]]]></json-logger:content>
		</json-logger:logger>
	</sub-flow>
	
	<sub-flow name="sgst-sd-edi-eapi-impl-current-stock-flow" doc:id="0da463a6-cf11-4c70-a1f3-3622da0d4391" >
		<json-logger:logger doc:name="log-Initial status" doc:id="393a70c6-c7cb-4f86-8fc4-21dde1087f34" config-ref="JSON_Logger_Config" message="API START: INIT - Received API request for current-stock" correlationId="#[vars.transactionId]">
			<json-logger:content ><![CDATA[#[%dw 2.0
output application/json
---
{
   "flowDirection": Mule::p('api.oneRoof.flowDirection'),
   "source": Mule::p('api.oneRoof.source'),
   "target": vars.fileDetails.externalSystem default "",
   "fileName": if(vars.fileDetails.flatFileName != null and vars.fileDetails.flatFileExtension != null)(vars.fileDetails.flatFileName as String ++ vars.fileDetails.flatFileExtension as String) else "" ,
   "errorCode": "",
   "errorMessage": "",
   "subsidiary": vars.fileDetails.subsidiary default "",
   "apiName": Mule::p('api.name'),
   "action": Mule::p('api.action.api-start'),
   "status": Mule::p('api.status.init')
}]]]></json-logger:content>
		</json-logger:logger>
		
		<ee:transform doc:name="Set payload to send to SAPI" doc:id="25220629-6417-4c42-bf5e-c4b3a3baaaf8" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"DTS": payload..OneRoofRequest.DTS,
	"TypeOfData": payload..OneRoofRequest.TypeOfData,
	"ReportRequestID": payload..OneRoofRequest.ReportRequestID,
	"NSCcode": payload..OneRoofRequest.*NSCcode,
	"NSCStorLocCode": payload..OneRoofRequest.*NSCStorLocCode,
	"NSCMaterialNumber": payload..OneRoofRequest.*NSCMaterialNumber,
	"MfgCode": payload..OneRoofRequest.DTS,
	"MfgStorLocCode": payload..OneRoofRequest.*MfgStorLocCode,
	"MfgMaterialNumber": payload..OneRoofRequest.*MfgMaterialNumber
}]]></ee:set-payload>
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="httpConfig" ><![CDATA[output application/json
---
{
	host:  Mule::p('https.oneroof.sapi.host'),
	port:  Mule::p('https.oneroof.sapi.port'),
	basepath:  Mule::p('https.oneroof.sapi.basepath'),
	path:  Mule::p('https.oneroof.sapi.currentStock.path')
}]]></ee:set-variable>
				<ee:set-variable variableName="fileDetails" ><![CDATA[%dw 2.0
output application/json
---
{
	"externalSystem": "PBS",
	"flatFileName": "CurrentStock" ++ "_" ++ now() as String {format: "YYYYMMDDHHmmSS"},
	"fileExtension": ".txt",
	"subsidiary": "NA"
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="Call to SAPI" doc:id="06fcb2e8-709d-45c2-ab49-b15a45cdec57" name="sgst-sd-edi-eapi-impl-sap-sapi-flow"/>
		<ee:transform doc:name="Frame - Response" doc:id="1c30e43b-4dad-46dd-b1b8-716a48f5d806">
			<ee:message>
				<ee:set-payload resource="dwl/currentStockResponsePayload.dwl" />
			</ee:message>
		</ee:transform>
		<json-logger:logger doc:name="Log Success Response" doc:id="6127996f-e351-40c8-893b-6216d9b6ca7f" config-ref="JSON_Logger_Config" message="API END:COMPLETE : Received API request for current-stock" tracePoint="AFTER_TRANSFORM" correlationId="#[vars.transactionId]">
			<json-logger:content ><![CDATA[#[%dw 2.0
output application/json
---
{
   "flowDirection": Mule::p('api.oneRoof.flowDirection'),
   "source": Mule::p('api.oneRoof.source'),
   "target": vars.fileDetails.externalSystem default "",
   "fileName": if(vars.fileDetails.flatFileName != null and vars.fileDetails.flatFileExtension != null)(vars.fileDetails.flatFileName as String ++ vars.fileDetails.flatFileExtension as String) else "" ,
   "errorCode": "",
   "errorMessage": "",
   "subsidiary": vars.fileDetails.subsidiary default "",
   "apiName": Mule::p('api.name'),
   "action": Mule::p('api.action.api-end'),
   "status": Mule::p('api.status.complete')
}]]]></json-logger:content>
		</json-logger:logger>
	</sub-flow>
	<sub-flow name="sgst-sd-edi-eapi-impl-sap-sapi-flow" doc:id="53fc38f0-abba-4a76-8cc9-f02d0b7bde8b" >
		<json-logger:logger doc:name="Log - SAPI Call" doc:id="7c2a41b5-dc7b-4b47-b0c1-f0ce5ded6a00" config-ref="JSON_Logger_Config" message="CALL API:START - Initiated a call to SGST SD SAP SAPI" correlationId="#[vars.transactionId]">
			<json-logger:content ><![CDATA[#[%dw 2.0
output application/json
---
{
   "flowDirection": Mule::p('api.oneRoof.flowDirection'),
   "source": Mule::p('api.oneRoof.source'),
   "target": vars.fileDetails.externalSystem default "",
   "fileName": if(vars.fileDetails.flatFileName != null and vars.fileDetails.flatFileExtension != null)(vars.fileDetails.flatFileName as String ++ vars.fileDetails.flatFileExtension as String) else "" ,
   "errorCode": "",
   "errorMessage": "",
   "subsidiary": vars.fileDetails.subsidiary default "",
   "apiName": Mule::p('api.name'),
   "action": Mule::p('api.action.call-api'),
   "status": Mule::p('api.status.init')
}]]]></json-logger:content>
		</json-logger:logger>
		
				<http:request method="POST" doc:name="Call SAPI- Post Details to SAPI" doc:id="421d1689-36f1-4f43-a532-1cdd15355396" config-ref="HTTP_Request_For_SAPI" outputMimeType="application/xml" path="#[vars.httpConfig.path]" sendCorrelationId="ALWAYS">
			<http:headers><![CDATA[#[output application/java
---
{
	"correlationID" : vars.transactionID,
	"X-Client-Secret" :  p('https.oneroof.sapi.client_id'),
    "X-Client-ID" : p('https.oneroof.sapi.client_secret')
}]]]></http:headers>
		</http:request>
		<json-logger:logger doc:name="Log - SAPI Call Status" doc:id="3a90ae06-8408-46ab-b6d5-7de068c73815" config-ref="JSON_Logger_Config" message="CALL API:END - SUCCESS call to SGST SD SAP SAPI" tracePoint="AFTER_REQUEST" correlationId="#[vars.transactionId]">
			<json-logger:content ><![CDATA[#[%dw 2.0
output application/json
---
{
   "flowDirection": Mule::p('api.oneRoof.flowDirection'),
   "source": Mule::p('api.oneRoof.source'),
   "target": vars.fileDetails.externalSystem default "",
   "fileName": if(vars.fileDetails.flatFileName != null and vars.fileDetails.flatFileExtension != null)(vars.fileDetails.flatFileName as String ++ vars.fileDetails.flatFileExtension as String) else "" ,
   "errorCode": "",
   "errorMessage": "",
   "subsidiary": vars.fileDetails.subsidiary default "",
   "apiName": Mule::p('api.name'),
   "action": Mule::p('api.action.call-api'),
   "status": Mule::p('api.status.success')
}]]]></json-logger:content>
		</json-logger:logger>
	</sub-flow>
	<!-- <sub-flow name="sgst-pp-edi-eapi-sending-email-notification-flow" doc:id="fbc2ba27-4e29-4d3b-81f4-3022e83402d5" >
		<ee:transform doc:name="Frame Error Message" doc:id="ebebcb4d-9476-4725-b1c1-6f6c8aa86ecb" >
			<ee:message >
				<ee:set-payload resource="dwl/AlertMessage.dwl" />
			</ee:message>
		</ee:transform>
		<json-logger:logger doc:name="Log Frame Message" doc:id="6aeb4590-7854-47c1-bfdd-3bce97f5a470" config-ref="JSON_Logger_Config" message="Error Message" tracePoint="AFTER_TRANSFORM">
			<json-logger:content ><![CDATA[#[%dw 2.0
output application/json
-&#45;&#45;
{
    "flowDirection": "out",
    "source": "SAP",
    "destination": vars.fileDetails.externalSystem default "",
    "fileName": vars.fileDetails.flatFileName default "",
    "errorCode": "",
    "errorMessage": "",
    "subsidiary": vars.fileDetails.subsidiary default ""
}]]]></json-logger:content>
		</json-logger:logger>
		<anypoint-mq:publish doc:id="5caf48b1-6308-49ca-a477-dde388c909e5" config-ref="Anypoint_MQ_Config" destination="${amq.notification.email.publish.path}" doc:name="Publish Error Message to Queue" />
	</sub-flow> -->
</mule>
